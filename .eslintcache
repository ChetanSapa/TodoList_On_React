[{"D:\\www\\IT\\Main\\src\\app\\app-reducer.ts":"1","D:\\www\\IT\\Main\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"2","D:\\www\\IT\\Main\\src\\api\\todolists-api.ts":"3","D:\\www\\IT\\Main\\src\\index.tsx":"4","D:\\www\\IT\\Main\\src\\features\\TodolistsList\\tasks-reducer.ts":"5","D:\\www\\IT\\Main\\src\\features\\TodolistsList\\todolists-reducer.ts":"6","D:\\www\\IT\\Main\\src\\app\\App.tsx":"7","D:\\www\\IT\\Main\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"8","D:\\www\\IT\\Main\\src\\reportWebVitals.ts":"9","D:\\www\\IT\\Main\\src\\app\\store.ts":"10","D:\\www\\IT\\Main\\src\\components\\EditableSpan\\EditableSpan.tsx":"11","D:\\www\\IT\\Main\\src\\features\\Login\\authReducer.ts":"12","D:\\www\\IT\\Main\\src\\features\\Login\\Login.tsx":"13","D:\\www\\IT\\Main\\src\\features\\TodolistsList\\TodolistsList.tsx":"14"},{"size":2200,"mtime":1624182763195,"results":"15","hashOfConfig":"16"},{"size":1773,"mtime":1596302738000,"results":"17","hashOfConfig":"16"},{"size":3110,"mtime":1624183673288,"results":"18","hashOfConfig":"16"},{"size":691,"mtime":1623950627398,"results":"19","hashOfConfig":"16"},{"size":5633,"mtime":1596729326000,"results":"20","hashOfConfig":"16"},{"size":4585,"mtime":1597334650000,"results":"21","hashOfConfig":"16"},{"size":2796,"mtime":1624184438842,"results":"22","hashOfConfig":"16"},{"size":4193,"mtime":1596722450000,"results":"23","hashOfConfig":"16"},{"size":425,"mtime":1607876588000,"results":"24","hashOfConfig":"16"},{"size":1097,"mtime":1597334650000,"results":"25","hashOfConfig":"16"},{"size":952,"mtime":1594161924000,"results":"26","hashOfConfig":"16"},{"size":2029,"mtime":1624183624842,"results":"27","hashOfConfig":"16"},{"size":4276,"mtime":1623957815539,"results":"28","hashOfConfig":"16"},{"size":4037,"mtime":1624178053123,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yyjnxj",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\www\\IT\\Main\\src\\app\\app-reducer.ts",[],"D:\\www\\IT\\Main\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["65","66","67"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\www\\IT\\Main\\src\\api\\todolists-api.ts",[],"D:\\www\\IT\\Main\\src\\index.tsx",["68"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './app/App';\nimport {Provider} from 'react-redux';\nimport {store} from './app/store';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["69","70"],"D:\\www\\IT\\Main\\src\\features\\TodolistsList\\tasks-reducer.ts",["71","72"],"import {AddTodolistActionType, RemoveTodolistActionType, SetTodolistsActionType} from './todolists-reducer'\r\nimport {TaskPriorities, TaskStatuses, TaskType, todolistsAPI, UpdateTaskModelType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\nimport {handleServerAppError, handleServerNetworkError} from '../../utils/error-utils'\r\n\r\nconst initialState: TasksStateType = {}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK':\r\n            return {...state, [action.todolistId]: state[action.todolistId].filter(t => t.id != action.taskId)}\r\n        case 'ADD-TASK':\r\n            return {...state, [action.task.todoListId]: [action.task, ...state[action.task.todoListId]]}\r\n        case 'UPDATE-TASK':\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: state[action.todolistId]\r\n                    .map(t => t.id === action.taskId ? {...t, ...action.model} : t)\r\n            }\r\n        case 'ADD-TODOLIST':\r\n            return {...state, [action.todolist.id]: []}\r\n        case 'REMOVE-TODOLIST':\r\n            const copyState = {...state}\r\n            delete copyState[action.id]\r\n            return copyState\r\n        case 'SET-TODOLISTS': {\r\n            const copyState = {...state}\r\n            action.todolists.forEach(tl => {\r\n                copyState[tl.id] = []\r\n            })\r\n            return copyState\r\n        }\r\n        case 'SET-TASKS':\r\n            return {...state, [action.todolistId]: action.tasks}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTaskAC = (taskId: string, todolistId: string) =>\r\n    ({type: 'REMOVE-TASK', taskId, todolistId} as const)\r\nexport const addTaskAC = (task: TaskType) =>\r\n    ({type: 'ADD-TASK', task} as const)\r\nexport const updateTaskAC = (taskId: string, model: UpdateDomainTaskModelType, todolistId: string) =>\r\n    ({type: 'UPDATE-TASK', model, todolistId, taskId} as const)\r\nexport const setTasksAC = (tasks: Array<TaskType>, todolistId: string) =>\r\n    ({type: 'SET-TASKS', tasks, todolistId} as const)\r\n\r\n// thunks\r\nexport const fetchTasksTC = (todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppStatusActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.getTasks(todolistId)\r\n        .then((res) => {\r\n            const tasks = res.data.items\r\n            dispatch(setTasksAC(tasks, todolistId))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const removeTaskTC = (taskId: string, todolistId: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    todolistsAPI.deleteTask(todolistId, taskId)\r\n        .then(res => {\r\n            const action = removeTaskAC(taskId, todolistId)\r\n            dispatch(action)\r\n        })\r\n}\r\nexport const addTaskTC = (title: string, todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.createTask(todolistId, title)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                const task = res.data.data.item\r\n                const action = addTaskAC(task)\r\n                dispatch(action)\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            } else {\r\n                handleServerAppError(res.data, dispatch);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n}\r\nexport const updateTaskTC = (taskId: string, domainModel: UpdateDomainTaskModelType, todolistId: string) =>\r\n    (dispatch: ThunkDispatch, getState: () => AppRootStateType) => {\r\n        const state = getState()\r\n        const task = state.tasks[todolistId].find(t => t.id === taskId)\r\n        if (!task) {\r\n            //throw new Error(\"task not found in the state\");\r\n            console.warn('task not found in the state')\r\n            return\r\n        }\r\n\r\n        const apiModel: UpdateTaskModelType = {\r\n            deadline: task.deadline,\r\n            description: task.description,\r\n            priority: task.priority,\r\n            startDate: task.startDate,\r\n            title: task.title,\r\n            status: task.status,\r\n            ...domainModel\r\n        }\r\n\r\n        todolistsAPI.updateTask(todolistId, taskId, apiModel)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                    const action = updateTaskAC(taskId, domainModel, todolistId)\r\n                    dispatch(action)\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                handleServerNetworkError(error, dispatch);\r\n            })\r\n    }\r\n\r\n// types\r\nexport type UpdateDomainTaskModelType = {\r\n    title?: string\r\n    description?: string\r\n    status?: TaskStatuses\r\n    priority?: TaskPriorities\r\n    startDate?: string\r\n    deadline?: string\r\n}\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\ntype ActionsType =\r\n    | ReturnType<typeof removeTaskAC>\r\n    | ReturnType<typeof addTaskAC>\r\n    | ReturnType<typeof updateTaskAC>\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof setTasksAC>\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n",["73","74"],"D:\\www\\IT\\Main\\src\\features\\TodolistsList\\todolists-reducer.ts",["75"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {RequestStatusType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status } as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n        dispatch(setAppStatusAC('loading'))\r\n        //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n                //скажем глобально приложению, что асинхронная операция завершена\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\n","D:\\www\\IT\\Main\\src\\app\\App.tsx",["76"],"D:\\www\\IT\\Main\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["77","78","79","80","81","82"],"D:\\www\\IT\\Main\\src\\reportWebVitals.ts",[],["83","84"],"D:\\www\\IT\\Main\\src\\app\\store.ts",[],"D:\\www\\IT\\Main\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\www\\IT\\Main\\src\\features\\Login\\authReducer.ts",["85","86"],"D:\\www\\IT\\Main\\src\\features\\Login\\Login.tsx",["87","88"],"D:\\www\\IT\\Main\\src\\features\\TodolistsList\\TodolistsList.tsx",["89","90","91","92","93","94","95","96"],{"ruleId":"97","severity":1,"message":"98","line":15,"column":97,"nodeType":"99","endLine":15,"endColumn":130,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"98","line":20,"column":8,"nodeType":"99","endLine":20,"endColumn":41,"suggestions":"101"},{"ruleId":"97","severity":1,"message":"98","line":24,"column":8,"nodeType":"99","endLine":24,"endColumn":41,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":8,"column":9,"nodeType":"105","messageId":"106","endLine":8,"endColumn":22},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":5,"column":9,"nodeType":"105","messageId":"106","endLine":5,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":13,"column":94,"nodeType":"114","messageId":"115","endLine":13,"endColumn":96},{"ruleId":"107","replacedBy":"116"},{"ruleId":"109","replacedBy":"117"},{"ruleId":"112","severity":1,"message":"113","line":10,"column":45,"nodeType":"114","messageId":"115","endLine":10,"endColumn":47},{"ruleId":"97","severity":1,"message":"118","line":29,"column":8,"nodeType":"99","endLine":29,"endColumn":10,"suggestions":"119"},{"ruleId":"97","severity":1,"message":"120","line":35,"column":8,"nodeType":"99","endLine":35,"endColumn":10,"suggestions":"121"},{"ruleId":"97","severity":1,"message":"98","line":39,"column":8,"nodeType":"99","endLine":39,"endColumn":42,"suggestions":"122"},{"ruleId":"97","severity":1,"message":"98","line":46,"column":8,"nodeType":"99","endLine":46,"endColumn":54,"suggestions":"123"},{"ruleId":"97","severity":1,"message":"98","line":48,"column":95,"nodeType":"99","endLine":48,"endColumn":134,"suggestions":"124"},{"ruleId":"97","severity":1,"message":"98","line":49,"column":101,"nodeType":"99","endLine":49,"endColumn":140,"suggestions":"125"},{"ruleId":"97","severity":1,"message":"98","line":50,"column":107,"nodeType":"99","endLine":50,"endColumn":146,"suggestions":"126"},{"ruleId":"107","replacedBy":"127"},{"ruleId":"109","replacedBy":"128"},{"ruleId":"103","severity":1,"message":"129","line":3,"column":18,"nodeType":"105","messageId":"106","endLine":3,"endColumn":30},{"ruleId":"103","severity":1,"message":"130","line":5,"column":9,"nodeType":"105","messageId":"106","endLine":5,"endColumn":18},{"ruleId":"131","severity":2,"message":"132","line":20,"column":75,"nodeType":"133","messageId":"134","endLine":20,"endColumn":96},{"ruleId":"135","severity":1,"message":"136","line":59,"column":32,"nodeType":"137","endLine":59,"endColumn":49},{"ruleId":"97","severity":1,"message":"138","line":36,"column":8,"nodeType":"99","endLine":36,"endColumn":10,"suggestions":"139"},{"ruleId":"97","severity":1,"message":"140","line":41,"column":8,"nodeType":"99","endLine":41,"endColumn":10,"suggestions":"141"},{"ruleId":"97","severity":1,"message":"140","line":46,"column":8,"nodeType":"99","endLine":46,"endColumn":10,"suggestions":"142"},{"ruleId":"97","severity":1,"message":"140","line":51,"column":8,"nodeType":"99","endLine":51,"endColumn":10,"suggestions":"143"},{"ruleId":"97","severity":1,"message":"140","line":56,"column":8,"nodeType":"99","endLine":56,"endColumn":10,"suggestions":"144"},{"ruleId":"97","severity":1,"message":"140","line":61,"column":8,"nodeType":"99","endLine":61,"endColumn":10,"suggestions":"145"},{"ruleId":"97","severity":1,"message":"140","line":66,"column":8,"nodeType":"99","endLine":66,"endColumn":10,"suggestions":"146"},{"ruleId":"97","severity":1,"message":"140","line":71,"column":8,"nodeType":"99","endLine":71,"endColumn":10,"suggestions":"147"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["148"],["149"],["150"],"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"'setAppErrorAC' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["151"],["152"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["153"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["154"],["155"],["156"],["157"],["158"],["159"],["151"],["152"],"'todolistsAPI' is defined but never used.","'addTaskAC' is defined but never used.","@typescript-eslint/no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["160"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["161"],["162"],["163"],["164"],["165"],["166"],["167"],{"desc":"168","fix":"169"},{"desc":"168","fix":"170"},{"desc":"168","fix":"171"},"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"168","fix":"176"},{"desc":"168","fix":"177"},{"desc":"168","fix":"178"},{"desc":"168","fix":"179"},{"desc":"168","fix":"180"},{"desc":"181","fix":"182"},{"desc":"172","fix":"183"},{"desc":"172","fix":"184"},{"desc":"172","fix":"185"},{"desc":"172","fix":"186"},{"desc":"172","fix":"187"},{"desc":"172","fix":"188"},{"desc":"172","fix":"189"},"Update the dependencies array to be: [props]",{"range":"190","text":"191"},{"range":"192","text":"191"},{"range":"193","text":"191"},"Update the dependencies array to be: [dispatch]",{"range":"194","text":"195"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"196","text":"197"},{"range":"198","text":"191"},{"range":"199","text":"191"},{"range":"200","text":"191"},{"range":"201","text":"191"},{"range":"202","text":"191"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"203","text":"204"},{"range":"205","text":"195"},{"range":"206","text":"195"},{"range":"207","text":"195"},{"range":"208","text":"195"},{"range":"209","text":"195"},{"range":"210","text":"195"},{"range":"211","text":"195"},[765,798],"[props]",[1071,1104],[1261,1294],[1343,1345],"[dispatch]",[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],[1846,1892],[1991,2030],[2133,2172],[2281,2320],[1328,1330],"[demo, dispatch, isLoggedIn]",[1499,1501],[1670,1672],[1875,1877],[2088,2090],[2289,2291],[2436,2438],[2615,2617]]